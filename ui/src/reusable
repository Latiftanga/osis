import React from 'react';
import { Form, Input, Select, DatePicker, Button } from 'antd';
import moment from 'moment';
import { useHistory, useLocation, useParams } from 'react-router-dom';
import axios from 'axios';
import { API_URL } from '../config.json';

const layout = {
  labelCol: { span: 5, },
  wrapperCol: { span: 10, },
};

const apiEndpoint = `${API_URL}staff/`;
const tailLayout = { wrapperCol: { offset: 5, span: 16, }, };

const StaffForm = () => {
  const [form] = Form.useForm();

  const history = useHistory();
  const location = useLocation();
  const { id } = useParams();

  const handleCreate = async () => {

    try {
      const values = await form.validateFields();
      if (values.date_of_birth) {
        const dob = moment(values.date_of_birth).format('YYYY-MM-DD');
        values.date_of_birth = dob;
      }
      const {data: staff } = await axios.post(apiEndpoint, values);
      history.push(`/staff/${staff.id}`);
    } catch (error) {
      const { values } = error;
      console.log(values);
    }
  }

  const handleUpdate = async () => {
    try {
      const values = await form.validateFields();
      if (values.date_of_birth) {
        const dob = moment(values.date_of_birth).format('YYYY-MM-DD');
        values.date_of_birth = dob;
      }
      const {data: staff } = await axios.put(`${apiEndpoint}${id}/`, values);
      history.push(`/staff/${staff.id}`);
    } catch (error) {
      const { values } = error;
      console.log(values);
    }
  }

  const getInitialValues = id => {
    if (id) {
      const { state } = location;
      if (state.date_of_birth) {state.date_of_birth = moment(state.date_of_birth)}
      return state;
    } else {return null;}
  }

  const { Option } = Select;

  return (
    <Form
      form={form}
      {...layout}
      name="basic"
      initialValues={ id && getInitialValues(id) }
    >
      <Form.Item name="title" label="Title">
          <Select allowClear>
          <Option value="Mr">Mr.</Option>
          <Option value="Ms">Ms.</Option>
          </Select>
      </Form.Item>
      <Form.Item
        label="First Name"
        name="first_name"
        rules={[ { required: true, message: 'Please input your first name!', }, ]}
      >
        <Input />
      </Form.Item>
      <Form.Item label="Middle Name" name="middle_name">
        <Input />
      </Form.Item>
      <Form.Item
        label="Last Name"
        name="last_name"
        rules={[ { required: true, message: 'Please input your last name!', }, ]}
      >
        <Input />
      </Form.Item>
      <Form.Item name="sex" label="Sex" rules={[ {required: true} ]}>
        <Select allowClear>
          <Option value="M">Male</Option>
          <Option value="F">Female</Option>
        </Select>
      </Form.Item>
      <Form.Item label="Date of Birth" name="date_of_birth">
          <DatePicker/>
      </Form.Item>
      <Form.Item label="Address" name="address">
        <Input />
      </Form.Item>
      <Form.Item label="Mobile" name="phone">
        <Input />
      </Form.Item>
      <Form.Item label="SSSNIT" name="sssnit_no">
        <Input />
      </Form.Item>
      <Form.Item {...tailLayout}>
        {
          id ? (
            <Button type="primary" onClick={handleUpdate}>Update</Button>
          ) : (
            <Button type="primary" onClick={handleCreate}>Create</Button>
          )
        }
      </Form.Item>
    </Form>
  );
};
export default StaffForm;